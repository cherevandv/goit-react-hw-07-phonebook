{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","redux/actions.js","services/contacts-api.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","filter","createAction","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","fetchContacts","a","axios","get","data","fetchDeleteContactById","id","delete","fetchAddContact","name","number","newContact","post","defaults","baseURL","addContact","dispatch","actions","contactsAPI","deleteContact","fetchAllContacts","response","getItems","state","contacts","items","getFilter","getVisiblesContacts","createSelector","allContacts","normalizeFilter","toLowerCase","contact","includes","getLoading","isLoading","ContactForm","useState","setName","setNumber","contactsBook","useSelector","useDispatch","handleInputChange","e","currentTarget","value","findSameName","find","formReset","className","s","form","onSubmit","preventDefault","alert","operations","label","htmlFor","type","placeholder","onChange","button","Filter","ContactList","loadingContactsBook","map","onClick","color","height","width","App","useEffect","container","itemsReducer","createReducer","_","payload","filterReducer","isLoadingReducer","errorReducer","combineReducers","error","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b35874e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3U7ko\",\"label\":\"ContactForm_label__OsHXa\",\"button\":\"ContactForm_button__3z5Pb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1L2t5\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const filter = createAction('phonebook/filter');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport function fetchDeleteContactById(id) {\n  return axios.delete(`/contacts/${id}`);\n}\n\nexport function fetchAddContact(name, number) {\n  const newContact = { name, number };\n  return axios.post('/contacts', newContact);\n}\n","import * as contactsAPI from 'services/contacts-api';\nimport { actions } from './';\n\nexport const addContact = (name, number) => async dispatch => {\n  dispatch(actions.addContactRequest());\n  try {\n    const { data } = await contactsAPI.fetchAddContact(name, number);\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await contactsAPI.fetchDeleteContactById(id);\n    dispatch(actions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n  }\n};\n\nexport const fetchAllContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n  try {\n    const response = await contactsAPI.fetchContacts();\n    dispatch(actions.fetchContactsSuccess(response));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisiblesContacts = createSelector(\n  [getItems, getFilter],\n  (allContacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n\nexport const getLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { operations } from '../../redux';\nimport { getItems } from '../../redux/selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactsBook = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !number) {\n      return alert(`Some field is empty.`);\n    }\n    const sameName = findSameName(name);\n    if (sameName) {\n      formReset();\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(operations.addContact(name, number));\n    formReset();\n  };\n  const findSameName = name => {\n    return contactsBook.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name..\"\n          value={name}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <label className={s.label} htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number..\"\n          value={number}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../../redux';\nimport { getFilter } from '../../redux/selectors';\nimport './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={e => dispatch(actions.filter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { operations } from '../../redux';\nimport { getVisiblesContacts, getLoading } from '../../redux/selectors';\nimport Loader from 'react-loader-spinner';\nimport './ContactList.module.css';\n\nexport default function ContactList() {\n  const contactsBook = useSelector(getVisiblesContacts);\n  const loadingContactsBook = useSelector(getLoading);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ul>\n        {contactsBook.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(operations.deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      {loadingContactsBook && (\n        <Loader type=\"TailSpin\" color=\"#6ebfd8\" height={30} width={30} />\n      )}\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport s from 'App.module.css';\nimport { operations } from './redux';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operations.fetchAllContacts());\n  }, []);\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { actions } from './';\n\nconst itemsReducer = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nconst isLoadingReducer = createReducer(false, {\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [actions.addContactError]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: () => null,\n  [actions.deleteContactError]: (_, { payload }) => payload,\n  [actions.deleteContactSuccess]: () => null,\n  [actions.fetchContactsError]: (_, { payload }) => payload,\n  [actions.fetchContactsSuccess]: () => null,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading: isLoadingReducer,\n  error: errorReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<p>Loading...</p>} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}