{"version":3,"sources":["App.module.css","services/contacts-api.js","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","a","axios","get","data","defaults","baseURL","filter","createAction","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContact","name","number","dispatch","contactsActions","newContact","post","contactsAPI","then","catch","error","deleteContact","id","delete","fetchAllContacts","res","getItems","state","contacts","items","getFilter","getVisiblesContacts","createSelector","allContacts","normalizeFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","contactsBook","useSelector","useDispatch","handleInputChange","e","currentTarget","value","findSameName","find","formReset","className","s","form","onSubmit","preventDefault","alert","operations","label","htmlFor","type","placeholder","onChange","button","Filter","actions","ContactList","map","onClick","App","useEffect","container","itemsReducer","createReducer","_","payload","filterReducer","isLoadingReducer","errorReducer","combineReducers","isLoading","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,yB,6QCGvB,8BAAAC,EAAA,sEACkBC,IAAMC,IAAN,aADlB,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAFPF,IAAMG,SAASC,QAAU,wB,WCAZC,EAASC,YAAa,oBAEtBC,EAAoBD,YAAa,8BACjCE,EAAoBF,YAAa,8BACjCG,EAAkBH,YAAa,4BAE/BI,EAAuBJ,YAClC,iCAEWK,EAAuBL,YAClC,iCAEWM,EAAqBN,YAAa,+BAElCO,EAAuBP,YAClC,iCAEWQ,EAAuBR,YAClC,iCAEWS,EAAqBT,YAAa,+BCnBlCU,EAAa,SAACC,EAAMC,GAAP,OAAkB,SAAAC,GAC1CA,EAASC,KFSJ,SAAyBH,EAAMC,GACpC,IAAMG,EAAa,CAAEJ,OAAMC,UAC3B,OAAOlB,IAAMsB,KAAK,YAAaD,GET/BE,CACmBN,EAAMC,GACtBM,MAAK,gBAAGtB,EAAH,EAAGA,KAAH,OAAciB,EAASC,EAAkClB,OAC9DuB,OAAM,SAAAC,GAAK,OAAIP,EAASC,EAAgCM,SAGhDC,EAAgB,SAAAC,GAAE,OAAI,SAAAT,GACjCA,EAASC,KFJJ,SAAgCQ,GACrC,OAAO5B,IAAM6B,OAAN,oBAA0BD,IEKjCL,CAC0BK,GACvBJ,MAAK,kBAAML,EAASC,EAAqCQ,OACzDH,OAAM,SAAAC,GAAK,OAAIP,EAASC,EAAmCM,SAGnDI,EAAmB,kBAAM,SAAAX,GACpCA,EAASC,KFlBJ,WAAP,+BEoBEG,GAEGC,MAAK,SAAAO,GAAG,OAAIZ,EAASC,EAAqCW,OAC1DN,OAAM,SAAAC,GAAK,OAAIP,EAASC,EAAmCM,S,gBCzBnDM,EAAW,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAEnCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAAS7B,QAEpCgC,EAAsBC,YACjC,CAACN,EAAUI,IACX,SAACG,EAAalC,GACZ,IAAMmC,EAAkBnC,EAAOoC,cAC/B,OAAOF,EAAYlC,QAAO,SAAAqC,GAAO,OAC/BA,EAAQzB,KAAKwB,cAAcE,SAASH,S,gBCL3B,SAASI,IAAe,IAAD,EACZC,mBAAS,IADG,mBAC7B5B,EAD6B,KACvB6B,EADuB,OAERD,mBAAS,IAFD,mBAE7B3B,EAF6B,KAErB6B,EAFqB,KAI9BC,EAAeC,YAAYjB,GAC3Bb,EAAW+B,cAEXC,EAAoB,SAAAC,GAAM,IAAD,EACLA,EAAEC,cAAlBpC,EADqB,EACrBA,KAAMqC,EADe,EACfA,MACd,OAAQrC,GACN,IAAK,OACH6B,EAAQQ,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACE,SAgBAC,EAAe,SAAAtC,GACnB,OAAO+B,EAAaQ,MAClB,SAAAd,GAAO,OAAIA,EAAQzB,KAAKwB,gBAAkBxB,EAAKwB,kBAI7CgB,EAAY,WAChBX,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMW,UAAWC,IAAEC,KAAMC,SAzBN,SAAAT,GAEnB,OADAA,EAAEU,iBACG7C,GAASC,EAGGqC,EAAatC,IAE5BwC,IACOM,MAAM,GAAD,OAAI9C,EAAJ,+BAEdE,EAAS6C,EAAsB/C,EAAMC,SACrCuC,KARSM,MAAM,yBAsBf,UACE,wBAAOL,UAAWC,IAAEM,MAAOC,QAAQ,GAAnC,iBAEE,uBACEC,KAAK,OACLlD,KAAK,OACLmD,YAAY,eACZd,MAAOrC,EACPoD,SAAUlB,OAGd,wBAAOO,UAAWC,IAAEM,MAAOC,QAAQ,GAAnC,mBAEE,uBACEC,KAAK,MACLlD,KAAK,SACLmD,YAAY,uBACZd,MAAOpC,EACPmD,SAAUlB,OAGd,wBAAQO,UAAWC,IAAEW,OAAQH,KAAK,SAAlC,4B,MCnES,SAASI,IACtB,IAAMjB,EAAQL,YAAYb,GAEpBjB,EAAW+B,cAEjB,OACE,0DAEE,uBACEiB,KAAK,OACLC,YAAY,MACZd,MAAOA,EACPe,SAAU,SAAAjB,GAAC,OAAIjC,EAASqD,EAAepB,EAAEC,cAAcC,c,MCZhD,SAASmB,IACtB,IAAMzB,EAAeC,YAAYZ,GAE3BlB,EAAW+B,cAEjB,OACE,6BACGF,EAAa0B,KAAI,gBAAG9C,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAChB,+BACE,8BACGD,EADH,KACWC,KAEX,wBACEiD,KAAK,SACLQ,QAAS,kBAAMxD,EAAS6C,EAAyBpC,KAFnD,sBAJOA,QCYFgD,I,MAAAA,EAjBf,WACE,IAAMzD,EAAW+B,cAKjB,OAJA2B,qBAAU,WACR1D,EAAS6C,OACR,IAGD,sBAAKN,UAAWC,IAAEmB,UAAlB,UACE,2CACA,cAAClC,EAAD,IACA,0CACA,cAAC2B,EAAD,IACA,cAACE,EAAD,Q,sBCTAM,EAAeC,YAAc,IAAD,mBAC/BR,GAA+B,SAACS,EAAD,YAAMC,WADN,cAE/BV,GAA4B,SAACvC,EAAD,OAAUiD,EAAV,EAAUA,QAAV,4BAA4BjD,GAA5B,CAAmCiD,OAFhC,cAG/BV,GAA+B,SAACvC,EAAD,OAAUiD,EAAV,EAAUA,QAAV,OAC9BjD,EAAM5B,QAAO,qBAAGuB,KAAgBsD,QAJF,IAO5BC,EAAgBH,YAAc,GAAD,eAChCR,GAAiB,SAACS,EAAD,YAAMC,YAGpBE,EAAmBJ,aAAc,GAAD,mBACnCR,GAA4B,kBAAM,KADC,cAEnCA,GAA4B,kBAAM,KAFC,cAGnCA,GAA0B,kBAAM,KAHG,cAInCA,GAA+B,kBAAM,KAJF,cAKnCA,GAA+B,kBAAM,KALF,cAMnCA,GAA6B,kBAAM,KANA,cAOnCA,GAA+B,kBAAM,KAPF,cAQnCA,GAA+B,kBAAM,KARF,cASnCA,GAA6B,kBAAM,KATA,IAYhCa,EAAeL,YAAc,MAAD,mBAC/BR,GAA0B,SAACS,EAAD,YAAMC,WADD,cAE/BV,GAA4B,kBAAM,QAFH,cAG/BA,GAA6B,SAACS,EAAD,YAAMC,WAHJ,cAI/BV,GAA+B,kBAAM,QAJN,cAK/BA,GAA6B,SAACS,EAAD,YAAMC,WALJ,cAM/BV,GAA+B,kBAAM,QANN,IASnBc,cAAgB,CAC7BnD,MAAO4C,EACP1E,OAAQ8E,EACRI,UAAWH,EACX1D,MAAO2D,ICtCMG,EANDC,YAAe,CAC3BC,QAAS,CACPxD,SAAUyD,KCIdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAEE,cAAC,EAAD,QAIJO,SAASC,eAAe,U,kBChB1BnG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.9cee1dd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1L2t5\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport function fetchDeleteContactById(id) {\r\n  return axios.delete(`/contacts/${id}`);\r\n}\r\n\r\nexport function fetchAddContact(name, number) {\r\n  const newContact = { name, number };\r\n  return axios.post('/contacts', newContact);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filter = createAction('phonebook/filter');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n","import * as contactsAPI from '../services/contacts-api';\r\nimport * as contactsActions from './actions';\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  contactsAPI\r\n    .fetchAddContact(name, number)\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n\r\n  contactsAPI\r\n    .fetchDeleteContactById(id)\r\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.deleteContactError(error)));\r\n};\r\n\r\nexport const fetchAllContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  contactsAPI\r\n    .fetchContacts()\r\n    .then(res => dispatch(contactsActions.fetchContactsSuccess(res)))\r\n    .catch(error => dispatch(contactsActions.fetchContactsError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisiblesContacts = createSelector(\n  [getItems, getFilter],\n  (allContacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as operations from '../../redux/operations';\nimport { getItems } from '../../redux/selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactsBook = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !number) {\n      return alert(`Some field is empty.`);\n    }\n    const sameName = findSameName(name);\n    if (sameName) {\n      formReset();\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(operations.addContact(name, number));\n    formReset();\n  };\n  const findSameName = name => {\n    return contactsBook.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name..\"\n          value={name}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <label className={s.label} htmlFor=\"\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number..\"\n          value={number}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\nimport './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={e => dispatch(actions.filter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as operations from '../../redux/operations';\nimport { getVisiblesContacts } from '../../redux/selectors';\nimport './ContactList.module.css';\n\nexport default function ContactList() {\n  const contactsBook = useSelector(getVisiblesContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contactsBook.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(operations.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport s from './App.module.css';\nimport * as operations from './redux/operations';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operations.fetchAllContacts());\n  }, []);\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\n// const initialData = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\nconst itemsReducer = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nconst isLoadingReducer = createReducer(false, {\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [actions.addContactError]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: () => null,\n  [actions.deleteContactError]: (_, { payload }) => payload,\n  [actions.deleteContactSuccess]: () => null,\n  [actions.fetchContactsError]: (_, { payload }) => payload,\n  [actions.fetchContactsSuccess]: () => null,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading: isLoadingReducer,\n  error: errorReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<p>Loading...</p>} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3U7ko\",\"label\":\"ContactForm_label__OsHXa\",\"button\":\"ContactForm_button__3z5Pb\"};"],"sourceRoot":""}